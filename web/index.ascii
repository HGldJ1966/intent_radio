= Intent Radio =
Stephen Blott <smblott+ir@gmail.com>
// :toc2:

.Quick links:
****
- jump straight to link:#downloads[downloads].
- jump straight to broadcast intent link:#how[instructions].
****

// /////////////////////////////////////////////////////
== What? ==

****
_Intent Radio_ is an android audio media app without a graphical user
interface.  It is controlled exclusively through the delivery of
http://developer.android.com/reference/android/content/BroadcastReceiver.html[broadcast
intents].  If you do not know what a broadcast intent is, then this is
probably not the app for you.

Intent Radio was developed to play internet radio stations.  However, it'll
happily play local audio media too.
****

// /////////////////////////////////////////////////////
== Who? ==

****
You might be interested in _Intent Radio_ if:

- you use Android,
- you use Tasker,
- you listen to internet radio or other audio, and
- well, you're a geek.
****

// /////////////////////////////////////////////////////
== Download ==

****
I'm too tight to pay Google $25 for the honour of hosting this on the
Play Store.  So, for the moment, the download is on
https://github.com/smblott-github/intent_radio/releases[GitHub] (and direct
`apk` download links are link:#downloads[below]).

Alternatively, you can download and build the app from
https://github.com/smblott-github/intent_radio[source].
****

// /////////////////////////////////////////////////////
== Why? ==

****
There are already many internet radio apps for Android; so, why another
one?

Well, I couldn't find one that worked just right for me...

Xiialive::
   I tried (and like) http://xiialive.com/[xiialive].  And it supports external
   broadcast intents.  However, I was finding it would hang irredeemably
   on start up about two times in five, mainly when on mobile data.

Tunein::
   And I particularly like http://tunein.com/[tunein].  However, it doesn't
   support either shortcuts or broadcast intents, so I have no way to
   start and stop it automatically, say when a headset is plugged in or
   out.

BBC IPlayer Radio::
   The
   https://play.google.com/store/apps/details?id=uk.co.bbc.android.iplayerradio&hl=en[BBC
   IPlayer Radio] app is pretty slick; and most of what I listen to is BBC.
   Again, however, there's no way to control playback without much
   pointing and pressing.
****

****
And then there's http://tasker.dinglisch.net/[Tasker].  Tasker is an
automation app for Android.  It's like a small graphical programming
language combined with a mechanism to fire off tasks in response to various
events.

_Intent Radio_ was written primarily to be driven by Tasker, either via
task shortcuts on the home screen, or via Tasker's response to events such as
a headset being plugged in or out.
****

// /////////////////////////////////////////////////////
[[how]]
== How? ==

****
_Intent Radio_ supports the following broadcast intents...
****

.`org.smblott.intentradio.PLAY`
****
- start playback
- extras:
** `url` -- the URL to play
** `name` -- the display name for the station

Both extras are strings, and both are optional.

If `url` is omitted, then Intent Radio plays the previously-playing
station.  If there is no such station, then it plays BBC Radio 4 (because,
well, why not?).
****

.`org.smblott.intentradio.STOP`
****
- stop playback
- extras: none
****

.`org.smblott.intentradio.PAUSE`
****
- pause playback, if playing
- extras: none
****

.`org.smblott.intentradio.RESTART`
****
- restart playback, if paused
- extras: none
****

[[state-request]]
.`org.smblott.intentradio.STATE_REQUEST`
****
- request that Intent Radio broadcast its state (see below)
- extras: none

This intent is not _required_ to receive state updates.
Intent Radio broadcasts its state automatically whenever its state changes.
****

[[state]]
.`org.smblott.intentradio.STATE`
****
- this is broadcast by Intent Radio itself to inform listeners (such as Tasker) of its state
- extras:
** `state`: one of `stop`, `play`, `play/buffering`, `play/pause`, `play/duck`, `complete`, or `error`
** `url`: the current URL
** `name`: the current name

These are all strings.

The sample Tasker project includes a listener which sets the global Tasker
variables `%IRSTATE`, `%IRURL` and `%IRNAME` whenever such an intent is
received.

If you are not using the sample project (or have installed it and edited it
to meet your own needs), then set up Tasker as follows:

- Create a new Tasker profile: `event/System/Intent Received`.
- Set `Action` to `org.smblott.intentradio.STATE`.
- Within the associated task, the local variable `%state` is the current
  state, `%url` the current URL, and `%name` the current name.  Assign these to
  global variables of your choice, such as `%IRSTATE`, `%IRURL` and `%IRNAME`.
****

.More Information
****
During playback, _Intent Radio_ places a notification in the notification
area.  Clicking on the notification either causes playback to stop or
(re-)start, depending upon which is most appropriate.

_Intent Radio_ uses the built-in Android
http://developer.android.com/reference/android/media/MediaPlayer.html[media
player] for playback.  So all audio codecs supported natively by Android
are supported by _Intent Radio_.

Additionally, _Intent Radio_ supports
http://en.wikipedia.org/wiki/PLS_(file_format)[PLS playlists] (whose URL must
end with the suffix `.pls`) and
http://en.wikipedia.org/wiki/M3U[M3U playlists] (whose URL
must
end with the suffix `.m3u`).  For example:

- `http://www.bbc.co.uk/.../xxx.pls`
- `http://www.bbc.co.uk/.../xxx.m3u`
****

// /////////////////////////////////////////////////////
== Warnings! ==

****
Although _Intent Radio_ has no graphical user interface, you must
nevertheless start up the app _at least once_.  Otherwise, Android will not
deliver broadcast intents to the app's background service.  This is an
Android security feature.  Thereafter, it should not be necessary to launch
the app at all, even after a reboot.

Also, start up can be slow for some streams.  BBC Radio 4, for example,
takes in excess of 30 seconds for playback to begin.  I do not know the
source of this delay.  Please be patient.

Finally, _Intent Radio_ is built for Android API level 16, so only for 4.1
(Jelly Bean) devices and above.
****

// /////////////////////////////////////////////////////
== More... ==

.If you're using Tasker:
****
- Then this link:./Radio.prj.xml[Tasker project] may be helpful in getting
  started with _Intent Radio_. +
  This project can also be installed from within the app itself.
- Or, there some basic are instructions link:./tasker.html[here].
****

.Debugging
****
- See link:./debug.html[here].
****

// /////////////////////////////////////////////////////
[[notes]]
== Release Notes ==

[[downloads]]
.Downloads:
****
- See the https://github.com/smblott-github/intent_radio/releases[Github releases].
- Also available on https://f-droid.org/repository/browse/?fdid=org.smblott.intentradio[F-Droid]. +
  (Although the F-Droid version may be somewhat behind the one available on GitHub.)
- Or use the direct links to the GitHub downloads below.

Or, you can use the bleeding-edge release, which is
https://dl.dropboxusercontent.com/u/41898306/IntentRadio-release.apk[here],
on Dropbox.
****

// .GitHub/master and bleeding-edge release:

.Version 1.8.0:
****
- Major reworking of notifications, including look and click behaviour. +
  When stopped or paused, clicking on the notification now restarts.
- Substantial reworking of the state/audio-focus/thread model.
- Recursive playlist fetch.  +
  If a playlist contains a playlist, then fetch that too. +
  Post a playlist of your favourite stations online somewhere, even containing
  playlists itself, point Intent Radio towards it, and listen to a random
  favourite station.
- Changed name of state `play/dim` to `play/duck`; added state `complete`.
- Add .M3u8 playlist type (for BBC Media Selector).

Direct download (from GitHub):

- https://github.com/smblott-github/intent_radio/releases/download/v1.8.0/IntentRadio-release.apk[v1.8.0/IntentRadio-release.apk]
****

.Version 1.7:
****
- Add button to install sample Tasker project.
- Improved (extended) the sample Tasker project.
- Broadcast state (can be tracked in Tasker).
- Sample project sets Tasker global variables `%IRSTATE`, `IRURL` and `IRNAME` to broadcast state.
- Handle implicit intents.
- A PLAY request without a "url" plays last station, if possible.
- Re-use `MediaPlayer` instance.
- Better notifications.

Direct download (from GitHub):

- https://github.com/smblott-github/intent_radio/releases/download/v1.7/IntentRadio-release.apk[v1.7/IntentRadio-release.apk]
****

.Version 1.6:
****
- Separate page for clipping intents to clipboard.
- Better layout in app.
- Notification persists after errors +
  (but then it is not _ongoing_, so it can be dismissed).
- Version and build date visible in app.
- Much code refactoring and clean up.

Direct download (from GitHub):

- https://github.com/smblott-github/intent_radio/releases/download/v1.6/IntentRadio-release.apk[v1.6/IntentRadio-release.apk]
****

.Version 1.5:
****
- Pause/restart broadcast intents.
- Improved handling of audio focus.
- Improved notifications.

Direct download (from GitHub):

- https://github.com/smblott-github/intent_radio/releases/download/v1.5/IntentRadio-release.apk[v1.5/IntentRadio-release.apk]
****

.Version 1.3:
****
- M3u playlist support.

Direct download (from GitHub):

- https://github.com/smblott-github/intent_radio/releases/download/v1.3/IntentRadio-release-r1.3.apk[v1.3/IntentRadio-release-r1.3.apk]
****

.Version 1.2:
****
- Obtain Wifi lock when on Wifi.
- Handle audio focus events.
****

.Version 1.1
****
- Use `httpURLConnection`.
- Fetch playlists on an asynchronous thread (so, non-blocking).
****

.Version 1.0
****
- Initial release.
****

// vim: set syntax=asciidoc:
